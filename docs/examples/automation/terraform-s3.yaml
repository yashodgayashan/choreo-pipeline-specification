# Terraform S3 Automation Pipeline
# Demonstrates infrastructure automation using Terraform to create AWS S3 buckets
# Use Case: Automated infrastructure provisioning and management

steps:
  # Step 1: Setup Terraform environment
  - name: Setup Terraform
    inlineScript: |
      #!/bin/bash
      echo "Setting up Terraform environment..."

      # Verify Terraform installation
      terraform version

      # Initialize working directory
      cd $REPOSITORY_DIR/terraform

      # Configure AWS credentials
      echo "Configuring AWS credentials..."
      echo "AWS Region: {{VARIABLES.AWS_REGION}}"

      echo "Terraform setup completed"
    timeout: 300
    retries: 1
    env:
      - name: AWS_ACCESS_KEY_ID
        value: "{{SECRETS.AWS_ACCESS_KEY_ID}}"
      - name: AWS_SECRET_ACCESS_KEY
        value: "{{SECRETS.AWS_SECRET_ACCESS_KEY}}"
      - name: AWS_DEFAULT_REGION
        value: "{{VARIABLES.AWS_REGION}}"

  # Step 2: Terraform initialization and validation
  - name: Terraform Init and Validate
    inlineScript: |
      #!/bin/bash
      echo "Initializing Terraform..."
      cd $REPOSITORY_DIR/terraform

      # Initialize Terraform
      terraform init -backend-config="bucket={{VARIABLES.TERRAFORM_STATE_BUCKET}}"

      # Validate configuration
      terraform validate

      # Format check
      terraform fmt -check=true

      echo "Terraform initialization and validation completed"
    timeout: 600
    retries: 2
    env:
      - name: AWS_ACCESS_KEY_ID
        value: "{{SECRETS.AWS_ACCESS_KEY_ID}}"
      - name: AWS_SECRET_ACCESS_KEY
        value: "{{SECRETS.AWS_SECRET_ACCESS_KEY}}"

  # Step 3: Terraform plan
  - name: Terraform Plan
    inlineScript: |
      #!/bin/bash
      echo "Creating Terraform execution plan..."
      cd $REPOSITORY_DIR/terraform

      # Create execution plan
      terraform plan \
        -var="bucket_name={{VARIABLES.S3_BUCKET_NAME}}" \
        -var="environment={{VARIABLES.ENVIRONMENT}}" \
        -var="project={{VARIABLES.PROJECT_NAME}}" \
        -out=tfplan

      echo "Terraform plan created successfully"
    timeout: 300
    retries: 1
    env:
      - name: AWS_ACCESS_KEY_ID
        value: "{{SECRETS.AWS_ACCESS_KEY_ID}}"
      - name: AWS_SECRET_ACCESS_KEY
        value: "{{SECRETS.AWS_SECRET_ACCESS_KEY}}"

  # Step 4: Apply Terraform changes
  - name: Terraform Apply
    inlineScript: |
      #!/bin/bash
      echo "Applying Terraform changes..."
      cd $REPOSITORY_DIR/terraform

      # Apply the planned changes
      terraform apply -auto-approve tfplan

      # Show outputs
      echo "=== Terraform Outputs ==="
      terraform output

      echo "Infrastructure provisioning completed"
    timeout: 900
    retries: 1
    env:
      - name: AWS_ACCESS_KEY_ID
        value: "{{SECRETS.AWS_ACCESS_KEY_ID}}"
      - name: AWS_SECRET_ACCESS_KEY
        value: "{{SECRETS.AWS_SECRET_ACCESS_KEY}}"

  # Step 5: Verify S3 bucket creation
  - name: Verify S3 Resources
    inlineScript: |
      #!/bin/bash
      echo "Verifying S3 bucket creation..."

      # Check if bucket exists
      aws s3 ls s3://{{VARIABLES.S3_BUCKET_NAME}} || {
        echo "Error: S3 bucket not found"
        exit 1
      }

      # List bucket properties
      echo "Bucket created successfully:"
      echo "Name: {{VARIABLES.S3_BUCKET_NAME}}"
      echo "Region: {{VARIABLES.AWS_REGION}}"
      echo "Environment: {{VARIABLES.ENVIRONMENT}}"

      echo "S3 verification completed"
    timeout: 180
    retries: 2
    env:
      - name: AWS_ACCESS_KEY_ID
        value: "{{SECRETS.AWS_ACCESS_KEY_ID}}"
      - name: AWS_SECRET_ACCESS_KEY
        value: "{{SECRETS.AWS_SECRET_ACCESS_KEY}}"

  # Step 6: Infrastructure summary
  - name: Infrastructure Summary
    inlineScript: |
      #!/bin/bash
      echo "=== Infrastructure Summary ==="
      echo "Project: {{VARIABLES.PROJECT_NAME}}"
      echo "Environment: {{VARIABLES.ENVIRONMENT}}"
      echo "AWS Region: {{VARIABLES.AWS_REGION}}"
      echo "S3 Bucket: {{VARIABLES.S3_BUCKET_NAME}}"
      echo ""
      echo "✅ Terraform initialized"
      echo "✅ Configuration validated"
      echo "✅ Infrastructure planned"
      echo "✅ Resources provisioned"
      echo "✅ S3 bucket verified"
      echo ""
      echo "Infrastructure automation completed successfully"
    continueOn:
      error: true

# Required Configuration:
# VARIABLES:
#   PROJECT_NAME: "my-project"
#   ENVIRONMENT: "development"
#   AWS_REGION: "us-east-1"
#   S3_BUCKET_NAME: "my-project-dev-bucket-12345"
#   TERRAFORM_STATE_BUCKET: "terraform-state-bucket"
#
# SECRETS:
#   AWS_ACCESS_KEY_ID: "your-aws-access-key-id"
#   AWS_SECRET_ACCESS_KEY: "your-aws-secret-access-key"